<Window x:Class="ScratchDetector.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ScratchDetector"
        mc:Ignorable="d"
        Title="Chatter" Height="589.2" Width="838" Background="Transparent" AllowsTransparency="True" WindowStyle="None">
    <Window.Resources>
        <!--Control colors.-->
        <Color x:Key="WindowColor">#FF40444B</Color>
        <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>

        <Color x:Key="SelectedBackgroundColor">#FF40444B</Color>
        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

        <Color x:Key="ControlLightColor">#9940444B</Color>
        <Color x:Key="ControlMediumColor">#4440444B</Color>

        <Color x:Key="ControlPressedColor">#5540444B</Color>

        <Color x:Key="GlyphColor">#CC888EFF</Color>

        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
        <ControlTemplate x:Key="TextBoxTemplate" TargetType="{x:Type TextBox}">
            <Border Name="Border"  CornerRadius="5" BorderThickness="1" Background="{TemplateBinding Background}">
                <ScrollViewer x:Name="PART_ContentHost" />
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="Gray"></Setter>
                                <Setter Property="Cursor" Value="IBeam"></Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
            <ControlTemplate.Triggers>
                <EventTrigger RoutedEvent="Mouse.MouseEnter">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2"
                                                 Storyboard.TargetProperty="FontSize"
                                                 To="16">
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
                <EventTrigger  RoutedEvent="Mouse.MouseLeave">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2"
                                                 Storyboard.TargetProperty="FontSize"
                                                 To="15">
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="5" BorderThickness="3" BorderBrush="#FF36393F" Background="{TemplateBinding Background}">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="BorderBrush" Value="#9936393F"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FF40444B"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="#CC888EFF"></Setter>
            <Setter Property="Background" Value="#9936393F"></Setter>
        </Style>
        <Style TargetType="Label">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Label">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="#CC888EFF"></Setter>
            <!--<Setter Property="Foreground" Value="#FF8E9297"></Setter>-->
        </Style>
        <Style x:Key="TextBoxBase" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Background" Value="#9940444B"></Setter>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="AcceptsReturn" Value="True"/>
            <Setter Property="Template" Value="{StaticResource TextBoxTemplate}"></Setter>
            <Setter Property="Foreground" Value="Gray"></Setter>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="Background" Value="#FF40444B"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style BasedOn="{StaticResource ResourceKey=TextBoxBase}" TargetType="TextBox" x:Key="TextBoxEvented">
            <EventSetter Event="GotMouseCapture" Handler="UrlTextBox_GotMouseCapture"></EventSetter>
        </Style>


    </Window.Resources>
    <Border CornerRadius="40,0,40,0" BorderThickness="0" Background="#FF202225" Margin="0,0,0.4,0">
        <Grid Name="InnerGrid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="10,40,10,10">
            <Border CornerRadius="30" Background="#FF2F3136" Margin="0,0,0,-0.4">
            </Border>
            <Button Content="Обзор" Name="Observe" HorizontalAlignment="Left" Height="27" Margin="586.8,443,0,0" VerticalAlignment="Top" Width="205" Click="Observe_Click"/>

            <Label Name="ChanelUrl" Content="Изображение" HorizontalAlignment="Left" Margin="10,422.4,0,0" VerticalAlignment="Top" RenderTransformOrigin="2.469,-2.984"/>
            <TextBox Style="{ StaticResource TextBoxEvented}" Name="UrlTextBox" HorizontalAlignment="Left" Height="27" Margin="10,443,0,0" TextWrapping="Wrap" Text="Абсолютный путь до изображения" VerticalAlignment="Top" Width="571.8" Foreground="Gray" FontSize="15" />
            <Button Name="ProcessButton" Content="Обработать" HorizontalAlignment="Left" Height="27" Margin="10,475,0,0" VerticalAlignment="Top" Width="781.8" Click="ProcessButton_Click" />
            <Label Name="StatusLabel" Content="" HorizontalAlignment="Left" Height="26" Margin="619,0,0,0" VerticalAlignment="Top" Width="173"/>
            <Label Name="ErrorLabel" Content="" HorizontalAlignment="Left" Margin="10,507,0,-166.2" VerticalAlignment="Top" Width="782" Height="198"/>
            <Grid Margin="10,31,10.4,113.8">
                <Image Name="AfterIm" Source="pack://application:,,,/Images/cross.png" Margin="384,0,0,0" />
                <Image Name="BeforeIm" Source="pack://application:,,,/Images/cross.png" Margin="0,0,384,0" />
            </Grid>
            <Grid Background="#FF202225" Name="ToolBar" HorizontalAlignment="Stretch" Height="35" Margin="34,-40,75,0" VerticalAlignment="Top"  MouseLeftButtonDown="ToolBar_MouseLeftButtonDown"/>
            <Grid HorizontalAlignment="Left" Height="35" Margin="743.4,-40,0,0" VerticalAlignment="Top" Width="75">
                <Button Name="CloseButton" HorizontalAlignment="Left" Height="32" Margin="40,3,0,0" VerticalAlignment="Top" Width="35" Click="CloseButton_Click">
                    <Image Source="pack://application:,,,/Images/cross.png"></Image>
                </Button>
                <Button Name="MinimizeButton" HorizontalAlignment="Left"  Height="32" Margin="0,3,0,0"  VerticalAlignment="Top" Width="35" Click="MinimizeButton_Click" >
                    <Image Source="pack://application:,,,/Images/line.png"></Image>
                </Button>
            </Grid>
        </Grid>
    </Border>

</Window>
